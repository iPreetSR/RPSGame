{"version":3,"sources":["src/PlayScreen.js","App.js","src/signs/rock.png","src/signs/scissors.png","src/signs/paper.png"],"names":["rock","require","scissors","paper","bgColors","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","color","img","width","height","button","position","bottom","PlayScreen","useState","counter","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","App","play","setPlay","StatusBar","marginBottom","marginTop","module","exports"],"mappings":"wMAIMA,EAAOC,EAAQ,IACfC,EAAWD,EAAQ,IACnBE,EAAQF,EAAQ,IAQhBG,EAAW,CAAC,UAAW,UAAW,WAgClCC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,IACVC,MAAO,QAETC,IAAK,CACHC,MAAO,IACPC,OAAQ,KAEVC,OAAQ,CACJC,SAAU,WACVC,OAAQ,MAICC,EAnDI,WAEf,MAA8BC,mBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,WACN,GAAe,IAAZF,EAAH,CACA,IAAMG,EAAQC,YAAW,WACrBH,EAAWD,EAAU,KACtB,KACH,OAAO,WACHK,aAAaF,OAElB,CAACH,IAGA,cAACM,EAAA,EAAD,CAAMC,MAAOzB,IAAW0B,QAAQ3B,EAAOG,UAAW,CAACE,gBAAiBN,EAASoB,EAAU,KAAvF,SACKA,EAAU,EACP,cAACS,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,OAApB,SAA6BW,IAE7B,qCACI,cAACU,EAAA,EAAD,CAAOH,MAAO1B,EAAOW,IAAKmB,OA3B5B,CAACnC,EAAME,EAAUC,GAClBiC,KAAKC,MAAsB,EAAhBD,KAAKE,aA2Bb,cAACR,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,OAApB,SACI,cAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAKf,EAAW,IAAIgB,MAAM,uBCjCpD,SAASC,IAEtB,MAAwBnB,oBAAS,GAAjC,WAAOoB,EAAP,KAAaC,EAAb,KAEA,OACED,EACE,cAAC,EAAD,IAEA,eAACb,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,UAApB,UACE,cAACyB,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,OAApB,iCACA,cAACoB,EAAA,EAAD,CAAMF,MAAO,CAAEjB,SAAS,IAAxB,wCACA,cAACgB,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,OAApB,SACE,cAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAMI,GAAQ,IAAOH,MAAM,WAE9C,cAACI,EAAA,EAAD,CAAWd,MAAM,YAMzB,IAAM1B,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,SAAU,GACVgC,aAAc,IAEhB3B,OAAQ,CACNF,MAAO,IACP8B,UAAW,O,uDCtCfC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.ba73a62e.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\n\nconst rock = require('./signs/rock.png')\nconst scissors = require('./signs/scissors.png')\nconst paper = require('./signs/paper.png')\n\nconst randomRPS = () => {\n    const signs = [rock, scissors, paper];\n    const rand = Math.floor(Math.random() * 3);\n    return signs[rand]\n}\n\nconst bgColors = ['#1abc9c', '#3498db', '#9b59b6'];\n\nconst PlayScreen = () => {\n\n    const [counter, setCounter] = useState(3);\n\n    useEffect(() => {\n        if(counter === 0) return \n        const timer = setTimeout(() => {\n            setCounter(counter - 1);\n        }, 500);\n        return () => {\n            clearTimeout(timer);\n        }\n    }, [counter])\n\n    return (\n        <View style={StyleSheet.compose(styles.container, {backgroundColor: bgColors[counter - 1]})}>\n            {counter > 0 ? (\n                <Text style={styles.header}>{counter}</Text>\n            ) : (\n                <>\n                    <Image style={styles.img} source={randomRPS()}/>\n                    <View style={styles.button}>\n                        <Button onPress={()=> setCounter(3)} title='Play Again'/>\n                    </View>\n                </>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 150,\n    color: '#fff',\n  },\n  img: {\n    width: 200,\n    height: 200,\n  },\n  button: {\n      position: \"absolute\",\n      bottom: 35,\n  }\n});\n\nexport default PlayScreen","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport PlayScreen from './src/PlayScreen';\n\nexport default function App() {\n\n  const [play, setPlay] = useState(false);\n\n  return (\n    play ? (\n      <PlayScreen/>\n    ) : (\n      <View style={styles.container}>\n        <Text style={styles.header}>Rock Paper Scissors</Text>\n        <Text style={{ fontSize:70 }}>✊ ✋ ✌️</Text>\n        <View style={styles.button}>\n          <Button onPress={() => setPlay(true)} title='Play'/>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n    )\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 28,\n    marginBottom: 30,\n  },\n  button: {\n    width: 240,\n    marginTop: 50,\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";"],"sourceRoot":""}